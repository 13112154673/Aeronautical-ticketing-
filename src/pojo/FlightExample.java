package pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class FlightExample {
	/*
	 * 自己写的分页start,count用于mapper文件
	 */
	protected int offset;
    protected int limit;

    public int getOffset() {
        return offset;
    }

    public void setOffset(int offset) {
        this.offset = offset;
    }

    public int getLimit() {
        return limit;
    }

    public void setLimit(int limit) {
        this.limit = limit;
    }
	
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table flight
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table flight
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table flight
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flight
     *
     * @mbg.generated
     */
    public FlightExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flight
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flight
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flight
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flight
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flight
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flight
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flight
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flight
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flight
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flight
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table flight
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andFIdIsNull() {
            addCriterion("f_id is null");
            return (Criteria) this;
        }

        public Criteria andFIdIsNotNull() {
            addCriterion("f_id is not null");
            return (Criteria) this;
        }

        public Criteria andFIdEqualTo(Integer value) {
            addCriterion("f_id =", value, "fId");
            return (Criteria) this;
        }

        public Criteria andFIdNotEqualTo(Integer value) {
            addCriterion("f_id <>", value, "fId");
            return (Criteria) this;
        }

        public Criteria andFIdGreaterThan(Integer value) {
            addCriterion("f_id >", value, "fId");
            return (Criteria) this;
        }

        public Criteria andFIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("f_id >=", value, "fId");
            return (Criteria) this;
        }

        public Criteria andFIdLessThan(Integer value) {
            addCriterion("f_id <", value, "fId");
            return (Criteria) this;
        }

        public Criteria andFIdLessThanOrEqualTo(Integer value) {
            addCriterion("f_id <=", value, "fId");
            return (Criteria) this;
        }

        public Criteria andFIdIn(List<Integer> values) {
            addCriterion("f_id in", values, "fId");
            return (Criteria) this;
        }

        public Criteria andFIdNotIn(List<Integer> values) {
            addCriterion("f_id not in", values, "fId");
            return (Criteria) this;
        }

        public Criteria andFIdBetween(Integer value1, Integer value2) {
            addCriterion("f_id between", value1, value2, "fId");
            return (Criteria) this;
        }

        public Criteria andFIdNotBetween(Integer value1, Integer value2) {
            addCriterion("f_id not between", value1, value2, "fId");
            return (Criteria) this;
        }

        public Criteria andAIdIsNull() {
            addCriterion("a_id is null");
            return (Criteria) this;
        }

        public Criteria andAIdIsNotNull() {
            addCriterion("a_id is not null");
            return (Criteria) this;
        }

        public Criteria andAIdEqualTo(String value) {
            addCriterion("a_id =", value, "aId");
            return (Criteria) this;
        }

        public Criteria andAIdNotEqualTo(String value) {
            addCriterion("a_id <>", value, "aId");
            return (Criteria) this;
        }

        public Criteria andAIdGreaterThan(String value) {
            addCriterion("a_id >", value, "aId");
            return (Criteria) this;
        }

        public Criteria andAIdGreaterThanOrEqualTo(String value) {
            addCriterion("a_id >=", value, "aId");
            return (Criteria) this;
        }

        public Criteria andAIdLessThan(String value) {
            addCriterion("a_id <", value, "aId");
            return (Criteria) this;
        }

        public Criteria andAIdLessThanOrEqualTo(String value) {
            addCriterion("a_id <=", value, "aId");
            return (Criteria) this;
        }

        public Criteria andAIdLike(String value) {
            addCriterion("a_id like", value, "aId");
            return (Criteria) this;
        }

        public Criteria andAIdNotLike(String value) {
            addCriterion("a_id not like", value, "aId");
            return (Criteria) this;
        }

        public Criteria andAIdIn(List<String> values) {
            addCriterion("a_id in", values, "aId");
            return (Criteria) this;
        }

        public Criteria andAIdNotIn(List<String> values) {
            addCriterion("a_id not in", values, "aId");
            return (Criteria) this;
        }

        public Criteria andAIdBetween(String value1, String value2) {
            addCriterion("a_id between", value1, value2, "aId");
            return (Criteria) this;
        }

        public Criteria andAIdNotBetween(String value1, String value2) {
            addCriterion("a_id not between", value1, value2, "aId");
            return (Criteria) this;
        }

        public Criteria andDepartureTimeIsNull() {
            addCriterion("departure_time is null");
            return (Criteria) this;
        }

        public Criteria andDepartureTimeIsNotNull() {
            addCriterion("departure_time is not null");
            return (Criteria) this;
        }

        public Criteria andDepartureTimeEqualTo(Date value) {
            addCriterion("departure_time =", value, "departureTime");
            return (Criteria) this;
        }

        public Criteria andDepartureTimeNotEqualTo(Date value) {
            addCriterion("departure_time <>", value, "departureTime");
            return (Criteria) this;
        }

        public Criteria andDepartureTimeGreaterThan(Date value) {
            addCriterion("departure_time >", value, "departureTime");
            return (Criteria) this;
        }

        public Criteria andDepartureTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("departure_time >=", value, "departureTime");
            return (Criteria) this;
        }

        public Criteria andDepartureTimeLessThan(Date value) {
            addCriterion("departure_time <", value, "departureTime");
            return (Criteria) this;
        }

        public Criteria andDepartureTimeLessThanOrEqualTo(Date value) {
            addCriterion("departure_time <=", value, "departureTime");
            return (Criteria) this;
        }

        public Criteria andDepartureTimeIn(List<Date> values) {
            addCriterion("departure_time in", values, "departureTime");
            return (Criteria) this;
        }

        public Criteria andDepartureTimeNotIn(List<Date> values) {
            addCriterion("departure_time not in", values, "departureTime");
            return (Criteria) this;
        }

        public Criteria andDepartureTimeBetween(Date value1, Date value2) {
            addCriterion("departure_time between", value1, value2, "departureTime");
            return (Criteria) this;
        }

        public Criteria andDepartureTimeNotBetween(Date value1, Date value2) {
            addCriterion("departure_time not between", value1, value2, "departureTime");
            return (Criteria) this;
        }

        public Criteria andArrivalTimeIsNull() {
            addCriterion("arrival_time is null");
            return (Criteria) this;
        }

        public Criteria andArrivalTimeIsNotNull() {
            addCriterion("arrival_time is not null");
            return (Criteria) this;
        }

        public Criteria andArrivalTimeEqualTo(Date value) {
            addCriterion("arrival_time =", value, "arrivalTime");
            return (Criteria) this;
        }

        public Criteria andArrivalTimeNotEqualTo(Date value) {
            addCriterion("arrival_time <>", value, "arrivalTime");
            return (Criteria) this;
        }

        public Criteria andArrivalTimeGreaterThan(Date value) {
            addCriterion("arrival_time >", value, "arrivalTime");
            return (Criteria) this;
        }

        public Criteria andArrivalTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("arrival_time >=", value, "arrivalTime");
            return (Criteria) this;
        }

        public Criteria andArrivalTimeLessThan(Date value) {
            addCriterion("arrival_time <", value, "arrivalTime");
            return (Criteria) this;
        }

        public Criteria andArrivalTimeLessThanOrEqualTo(Date value) {
            addCriterion("arrival_time <=", value, "arrivalTime");
            return (Criteria) this;
        }

        public Criteria andArrivalTimeIn(List<Date> values) {
            addCriterion("arrival_time in", values, "arrivalTime");
            return (Criteria) this;
        }

        public Criteria andArrivalTimeNotIn(List<Date> values) {
            addCriterion("arrival_time not in", values, "arrivalTime");
            return (Criteria) this;
        }

        public Criteria andArrivalTimeBetween(Date value1, Date value2) {
            addCriterion("arrival_time between", value1, value2, "arrivalTime");
            return (Criteria) this;
        }

        public Criteria andArrivalTimeNotBetween(Date value1, Date value2) {
            addCriterion("arrival_time not between", value1, value2, "arrivalTime");
            return (Criteria) this;
        }

        public Criteria andDeparturePlaceIsNull() {
            addCriterion("departure_place is null");
            return (Criteria) this;
        }

        public Criteria andDeparturePlaceIsNotNull() {
            addCriterion("departure_place is not null");
            return (Criteria) this;
        }

        public Criteria andDeparturePlaceEqualTo(String value) {
            addCriterion("departure_place =", value, "departurePlace");
            return (Criteria) this;
        }

        public Criteria andDeparturePlaceNotEqualTo(String value) {
            addCriterion("departure_place <>", value, "departurePlace");
            return (Criteria) this;
        }

        public Criteria andDeparturePlaceGreaterThan(String value) {
            addCriterion("departure_place >", value, "departurePlace");
            return (Criteria) this;
        }

        public Criteria andDeparturePlaceGreaterThanOrEqualTo(String value) {
            addCriterion("departure_place >=", value, "departurePlace");
            return (Criteria) this;
        }

        public Criteria andDeparturePlaceLessThan(String value) {
            addCriterion("departure_place <", value, "departurePlace");
            return (Criteria) this;
        }

        public Criteria andDeparturePlaceLessThanOrEqualTo(String value) {
            addCriterion("departure_place <=", value, "departurePlace");
            return (Criteria) this;
        }

        public Criteria andDeparturePlaceLike(String value) {
            addCriterion("departure_place like", value, "departurePlace");
            return (Criteria) this;
        }

        public Criteria andDeparturePlaceNotLike(String value) {
            addCriterion("departure_place not like", value, "departurePlace");
            return (Criteria) this;
        }

        public Criteria andDeparturePlaceIn(List<String> values) {
            addCriterion("departure_place in", values, "departurePlace");
            return (Criteria) this;
        }

        public Criteria andDeparturePlaceNotIn(List<String> values) {
            addCriterion("departure_place not in", values, "departurePlace");
            return (Criteria) this;
        }

        public Criteria andDeparturePlaceBetween(String value1, String value2) {
            addCriterion("departure_place between", value1, value2, "departurePlace");
            return (Criteria) this;
        }

        public Criteria andDeparturePlaceNotBetween(String value1, String value2) {
            addCriterion("departure_place not between", value1, value2, "departurePlace");
            return (Criteria) this;
        }

        public Criteria andArrivalPlaceIsNull() {
            addCriterion("arrival_place is null");
            return (Criteria) this;
        }

        public Criteria andArrivalPlaceIsNotNull() {
            addCriterion("arrival_place is not null");
            return (Criteria) this;
        }

        public Criteria andArrivalPlaceEqualTo(String value) {
            addCriterion("arrival_place =", value, "arrivalPlace");
            return (Criteria) this;
        }

        public Criteria andArrivalPlaceNotEqualTo(String value) {
            addCriterion("arrival_place <>", value, "arrivalPlace");
            return (Criteria) this;
        }

        public Criteria andArrivalPlaceGreaterThan(String value) {
            addCriterion("arrival_place >", value, "arrivalPlace");
            return (Criteria) this;
        }

        public Criteria andArrivalPlaceGreaterThanOrEqualTo(String value) {
            addCriterion("arrival_place >=", value, "arrivalPlace");
            return (Criteria) this;
        }

        public Criteria andArrivalPlaceLessThan(String value) {
            addCriterion("arrival_place <", value, "arrivalPlace");
            return (Criteria) this;
        }

        public Criteria andArrivalPlaceLessThanOrEqualTo(String value) {
            addCriterion("arrival_place <=", value, "arrivalPlace");
            return (Criteria) this;
        }

        public Criteria andArrivalPlaceLike(String value) {
            addCriterion("arrival_place like", value, "arrivalPlace");
            return (Criteria) this;
        }

        public Criteria andArrivalPlaceNotLike(String value) {
            addCriterion("arrival_place not like", value, "arrivalPlace");
            return (Criteria) this;
        }

        public Criteria andArrivalPlaceIn(List<String> values) {
            addCriterion("arrival_place in", values, "arrivalPlace");
            return (Criteria) this;
        }

        public Criteria andArrivalPlaceNotIn(List<String> values) {
            addCriterion("arrival_place not in", values, "arrivalPlace");
            return (Criteria) this;
        }

        public Criteria andArrivalPlaceBetween(String value1, String value2) {
            addCriterion("arrival_place between", value1, value2, "arrivalPlace");
            return (Criteria) this;
        }

        public Criteria andArrivalPlaceNotBetween(String value1, String value2) {
            addCriterion("arrival_place not between", value1, value2, "arrivalPlace");
            return (Criteria) this;
        }

        public Criteria andFristclassPriceIsNull() {
            addCriterion("fristclass_price is null");
            return (Criteria) this;
        }

        public Criteria andFristclassPriceIsNotNull() {
            addCriterion("fristclass_price is not null");
            return (Criteria) this;
        }

        public Criteria andFristclassPriceEqualTo(Integer value) {
            addCriterion("fristclass_price =", value, "fristclassPrice");
            return (Criteria) this;
        }

        public Criteria andFristclassPriceNotEqualTo(Integer value) {
            addCriterion("fristclass_price <>", value, "fristclassPrice");
            return (Criteria) this;
        }

        public Criteria andFristclassPriceGreaterThan(Integer value) {
            addCriterion("fristclass_price >", value, "fristclassPrice");
            return (Criteria) this;
        }

        public Criteria andFristclassPriceGreaterThanOrEqualTo(Integer value) {
            addCriterion("fristclass_price >=", value, "fristclassPrice");
            return (Criteria) this;
        }

        public Criteria andFristclassPriceLessThan(Integer value) {
            addCriterion("fristclass_price <", value, "fristclassPrice");
            return (Criteria) this;
        }

        public Criteria andFristclassPriceLessThanOrEqualTo(Integer value) {
            addCriterion("fristclass_price <=", value, "fristclassPrice");
            return (Criteria) this;
        }

        public Criteria andFristclassPriceIn(List<Integer> values) {
            addCriterion("fristclass_price in", values, "fristclassPrice");
            return (Criteria) this;
        }

        public Criteria andFristclassPriceNotIn(List<Integer> values) {
            addCriterion("fristclass_price not in", values, "fristclassPrice");
            return (Criteria) this;
        }

        public Criteria andFristclassPriceBetween(Integer value1, Integer value2) {
            addCriterion("fristclass_price between", value1, value2, "fristclassPrice");
            return (Criteria) this;
        }

        public Criteria andFristclassPriceNotBetween(Integer value1, Integer value2) {
            addCriterion("fristclass_price not between", value1, value2, "fristclassPrice");
            return (Criteria) this;
        }

        public Criteria andEconomyCountIsNull() {
            addCriterion("economy_count is null");
            return (Criteria) this;
        }

        public Criteria andEconomyCountIsNotNull() {
            addCriterion("economy_count is not null");
            return (Criteria) this;
        }

        public Criteria andEconomyCountEqualTo(Integer value) {
            addCriterion("economy_count =", value, "economyCount");
            return (Criteria) this;
        }

        public Criteria andEconomyCountNotEqualTo(Integer value) {
            addCriterion("economy_count <>", value, "economyCount");
            return (Criteria) this;
        }

        public Criteria andEconomyCountGreaterThan(Integer value) {
            addCriterion("economy_count >", value, "economyCount");
            return (Criteria) this;
        }

        public Criteria andEconomyCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("economy_count >=", value, "economyCount");
            return (Criteria) this;
        }

        public Criteria andEconomyCountLessThan(Integer value) {
            addCriterion("economy_count <", value, "economyCount");
            return (Criteria) this;
        }

        public Criteria andEconomyCountLessThanOrEqualTo(Integer value) {
            addCriterion("economy_count <=", value, "economyCount");
            return (Criteria) this;
        }

        public Criteria andEconomyCountIn(List<Integer> values) {
            addCriterion("economy_count in", values, "economyCount");
            return (Criteria) this;
        }

        public Criteria andEconomyCountNotIn(List<Integer> values) {
            addCriterion("economy_count not in", values, "economyCount");
            return (Criteria) this;
        }

        public Criteria andEconomyCountBetween(Integer value1, Integer value2) {
            addCriterion("economy_count between", value1, value2, "economyCount");
            return (Criteria) this;
        }

        public Criteria andEconomyCountNotBetween(Integer value1, Integer value2) {
            addCriterion("economy_count not between", value1, value2, "economyCount");
            return (Criteria) this;
        }

        public Criteria andEconomyPriceIsNull() {
            addCriterion("economy_price is null");
            return (Criteria) this;
        }

        public Criteria andEconomyPriceIsNotNull() {
            addCriterion("economy_price is not null");
            return (Criteria) this;
        }

        public Criteria andEconomyPriceEqualTo(Integer value) {
            addCriterion("economy_price =", value, "economyPrice");
            return (Criteria) this;
        }

        public Criteria andEconomyPriceNotEqualTo(Integer value) {
            addCriterion("economy_price <>", value, "economyPrice");
            return (Criteria) this;
        }

        public Criteria andEconomyPriceGreaterThan(Integer value) {
            addCriterion("economy_price >", value, "economyPrice");
            return (Criteria) this;
        }

        public Criteria andEconomyPriceGreaterThanOrEqualTo(Integer value) {
            addCriterion("economy_price >=", value, "economyPrice");
            return (Criteria) this;
        }

        public Criteria andEconomyPriceLessThan(Integer value) {
            addCriterion("economy_price <", value, "economyPrice");
            return (Criteria) this;
        }

        public Criteria andEconomyPriceLessThanOrEqualTo(Integer value) {
            addCriterion("economy_price <=", value, "economyPrice");
            return (Criteria) this;
        }

        public Criteria andEconomyPriceIn(List<Integer> values) {
            addCriterion("economy_price in", values, "economyPrice");
            return (Criteria) this;
        }

        public Criteria andEconomyPriceNotIn(List<Integer> values) {
            addCriterion("economy_price not in", values, "economyPrice");
            return (Criteria) this;
        }

        public Criteria andEconomyPriceBetween(Integer value1, Integer value2) {
            addCriterion("economy_price between", value1, value2, "economyPrice");
            return (Criteria) this;
        }

        public Criteria andEconomyPriceNotBetween(Integer value1, Integer value2) {
            addCriterion("economy_price not between", value1, value2, "economyPrice");
            return (Criteria) this;
        }

        public Criteria andFristclassCountIsNull() {
            addCriterion("fristclass_count is null");
            return (Criteria) this;
        }

        public Criteria andFristclassCountIsNotNull() {
            addCriterion("fristclass_count is not null");
            return (Criteria) this;
        }

        public Criteria andFristclassCountEqualTo(Integer value) {
            addCriterion("fristclass_count =", value, "fristclassCount");
            return (Criteria) this;
        }

        public Criteria andFristclassCountNotEqualTo(Integer value) {
            addCriterion("fristclass_count <>", value, "fristclassCount");
            return (Criteria) this;
        }

        public Criteria andFristclassCountGreaterThan(Integer value) {
            addCriterion("fristclass_count >", value, "fristclassCount");
            return (Criteria) this;
        }

        public Criteria andFristclassCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("fristclass_count >=", value, "fristclassCount");
            return (Criteria) this;
        }

        public Criteria andFristclassCountLessThan(Integer value) {
            addCriterion("fristclass_count <", value, "fristclassCount");
            return (Criteria) this;
        }

        public Criteria andFristclassCountLessThanOrEqualTo(Integer value) {
            addCriterion("fristclass_count <=", value, "fristclassCount");
            return (Criteria) this;
        }

        public Criteria andFristclassCountIn(List<Integer> values) {
            addCriterion("fristclass_count in", values, "fristclassCount");
            return (Criteria) this;
        }

        public Criteria andFristclassCountNotIn(List<Integer> values) {
            addCriterion("fristclass_count not in", values, "fristclassCount");
            return (Criteria) this;
        }

        public Criteria andFristclassCountBetween(Integer value1, Integer value2) {
            addCriterion("fristclass_count between", value1, value2, "fristclassCount");
            return (Criteria) this;
        }

        public Criteria andFristclassCountNotBetween(Integer value1, Integer value2) {
            addCriterion("fristclass_count not between", value1, value2, "fristclassCount");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table flight
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table flight
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}